% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map_shapes_to_data.R
\name{map_shapes_to_data}
\alias{map_shapes_to_data}
\title{Map Shape Files to Data Frame}
\usage{
map_shapes_to_data(
  data,
  id_col,
  shape_folder,
  shape_col = "shape",
  options = list(),
  verbose = TRUE
)
}
\arguments{
\item{data}{A data frame containing IDs for matching with shape file names.}

\item{id_col}{Character string specifying the column containing IDs to match
with shape file names (without extensions).}

\item{shape_folder}{Character string specifying the directory containing
JPEG/JPG shape files.}

\item{shape_col}{Character string specifying the name of the new shape column.
Default: "shape".}

\item{options}{List containing processing options:
\describe{
  \item{recursive}{Search subdirectories recursively (default: FALSE)}
  \item{case_sensitive}{Case-sensitive filename matching (default: FALSE)}
  \item{fail_on_missing}{Stop if any shapes are missing (default: FALSE)}
  \item{validate_shapes}{Validate imported shapes (default: TRUE)}
}}

\item{verbose}{Logical indicating whether to print progress messages. Default: TRUE.}
}
\value{
A data frame with an additional shape column containing imported shapes
  as Momocs Out objects or NULL for unmatched rows. Also includes attributes:
  \describe{
    \item{mapping_summary}{Summary of mapping results}
    \item{failed_imports}{List of files that failed to import}
  }
}
\description{
Maps shape files (JPEG/JPG) from a directory to rows in a data frame based on
ID matching. Shapes are imported using the Momocs package and added as a new
column. Supports batch processing, validation, and comprehensive error handling.
}
\examples{
\dontrun{
# Basic shape mapping
data_with_shapes <- map_shapes_to_data(
  data = my_data,
  id_col = "specimen_id",
  shape_folder = "shapes/"
)

# Advanced options
data_with_shapes <- map_shapes_to_data(
  data = my_data,
  id_col = "specimen_id", 
  shape_folder = "shapes/",
  shape_col = "outline",
  options = list(
    recursive = TRUE,
    case_sensitive = TRUE,
    fail_on_missing = TRUE,
    validate_shapes = TRUE
  )
)

# Check mapping results
summary_attr <- attr(data_with_shapes, "mapping_summary")
print(summary_attr)
}

}
